Posibles apuntes de programación propios: ideas y conceptos sueltos a modo de guía para reforzar y mantener un orden.

Constructores:
- Para dar valores iniciales a un objeto, sin necesidad de utilizar setters.
- Normalmente son funciones de visibilidad publicos, pero puede existir la necesidad de hacerlo privado.
- No devuelve ningun tipo de valor.

Estructura de los constructores: 
  - public o private + nombre de la clase + ()
  Constructor por defecto:
  - public Clase()
    {
  
    }
  - Dentro de los corchetes se define como será el objeto
  - public Clase()
    {
      x = 35;
      y = 5;
    }

Puede existir mas de un constructor de la misma clase, pero la diferencia serán los parámetros que se le pasarán
- public Clase(int newX, int newY)
    {
      x = newX;
      y = newY;
    }
- No es necesario pasarle todos los parametros.

Para llamar al constructor desde el Main:
  - Crear una instancia del objeto. Ej -> Clase clase = new Clase()
  - Normalmente, dentro de esos parentesis se le pasaran los parametros a meter para que el constructor se inicialize.
    Ej -> Clase clase = new Clase(5, 7)
  - Si posteriormente queremos llamar métodos utilizando la instancia de objeto solo necesitamos poner el nombre
    del objeto recien creado: clase + .NombreDelMetodo

  OJO: Dependiendo de los parámetros que le pasemos, el compilador puede llamar a uno u otro constructor

* Para ampliar: Existen también Destructores. Serán llamados dentro de la clase al igual que el constructor.
  Se crea utilizando el símbolo "~" delante del nombre
 - ~Clase()
  {
  }
  Destructores utilizados para liberar memomria dinámica, no muy frecuentes.
